apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
    name: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: sql-service
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
    name: mysql
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ali93/backend:3.2.3
        ports:
        - containerPort: 8080
        # env:
        # # - name: SPRING_DATASOURCE_URL
        # #   value: jdbc:mysql://$(SQL_SERVICE_SERVICE_HOST):3306/peopledb?createDatabaseIfNotExist=true
        # # - name: SPRING_DATASOURCE_PASSWORD
        # #   value: mysecret
        # - name: SPRING_DATASOURCE_USERNAME
        #   value: root
        env:
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom: 
            configMapKeyRef:
              name: fullstack-config
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom: 
            #configMapKeyRef:
             # name: fullstack-config
              #key: password
            secretKeyRef:
              name: fullstack-secret
              key: sql_password
        - name: SPRING_DATASOURCE_USERNAME_TESTING
          valueFrom: 
            configMapKeyRef:
              name: fullstack-config
              key: fakeVal


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: ali93/frontend:4.0
        ports:
        - containerPort: 8081
        env:
        - name: backend_url
          valueFrom:
            configMapKeyRef:
              name: fullstack-config
              key: backend_url
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fullstack-secret
              key: sql_password
        volumeMounts:
        - name: db-data
          mountPath: "/var/lib/mysql"
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: mysql-pvc
